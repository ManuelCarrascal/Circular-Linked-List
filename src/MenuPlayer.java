
import javax.swing.JOptionPane;
/**
 *
 * @author Manuel Alejandro Carrascal Arias
 * @github https://github.com/ManuelCarrascal
 */
public class MenuPlayer extends javax.swing.JFrame {

    ListSongs objectList = new ListSongs();
    int counter = 0;

    public MenuPlayer() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleApp = new javax.swing.JLabel();
        nameOfSong = new javax.swing.JLabel();
        nameSong = new javax.swing.JTextField();
        durationOfTheSong = new javax.swing.JLabel();
        durationSong = new javax.swing.JTextField();
        nameOfArtist = new javax.swing.JLabel();
        nameArtist = new javax.swing.JTextField();
        addSong = new javax.swing.JButton();
        options = new javax.swing.JLabel();
        search = new javax.swing.JButton();
        deleteSong = new javax.swing.JButton();
        modifySong = new javax.swing.JButton();
        seeList = new javax.swing.JButton();
        numberOfSongsText = new javax.swing.JLabel();
        numberOfSongs = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        titleApp.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        titleApp.setText("Music Player");

        nameOfSong.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        nameOfSong.setText("Name of song:");

        durationOfTheSong.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        durationOfTheSong.setText("Duration of the song:");

        nameOfArtist.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        nameOfArtist.setText("Name of artist:");

        addSong.setText("Add Song");
        addSong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSongActionPerformed(evt);
            }
        });

        options.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        options.setText("Options:");

        search.setText("Search Song");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        deleteSong.setText("Delete Song");
        deleteSong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteSongActionPerformed(evt);
            }
        });

        modifySong.setText("Modify Song");
        modifySong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifySongActionPerformed(evt);
            }
        });

        seeList.setText("See List");
        seeList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seeListActionPerformed(evt);
            }
        });

        numberOfSongsText.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        numberOfSongsText.setText("Number of songs: ");

        numberOfSongs.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(numberOfSongsText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(numberOfSongs, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(313, 313, 313)
                        .addComponent(options))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameArtist, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nameOfSong)
                            .addComponent(nameSong, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(durationSong, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nameOfArtist)
                            .addComponent(durationOfTheSong))
                        .addGap(129, 129, 129)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(deleteSong, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(modifySong, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addSong, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(search, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(seeList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(106, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(titleApp)
                .addGap(177, 177, 177))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleApp)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(options)
                    .addComponent(nameOfSong))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameSong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addSong))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(search)
                        .addGap(15, 15, 15)
                        .addComponent(modifySong)
                        .addGap(18, 18, 18)
                        .addComponent(deleteSong)
                        .addGap(18, 18, 18)
                        .addComponent(seeList))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(durationOfTheSong)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(durationSong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(nameOfArtist)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameArtist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(numberOfSongs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(numberOfSongsText, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addSongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSongActionPerformed
        if (!durationSong.getText().matches("[0-9:]+")) {
            JOptionPane.showMessageDialog(null, "Enter a valid duration (only numbers and ':')");
        } else if (nameSong.getText().isEmpty() && durationSong.getText().isEmpty() && nameArtist.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter the required data");
        } else if (nameSong.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "enter name of song");
        } else if (durationSong.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "enter the duration of song");
        } else if (nameArtist.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "enter the name of the song artist");
        } else {
            int opt = Integer.parseInt(JOptionPane.showInputDialog("1.add to start\n 2.add at the end"));
            switch (opt) {
                case 1:
                    objectList.InsertAtStart(nameSong.getText(), durationSong.getText(), nameArtist.getText());
                    break;
                case 2:
                    objectList.InsertAtEnd(nameSong.getText(), durationSong.getText(), nameArtist.getText());
                    break;
                default:
                    JOptionPane.showMessageDialog(null, "invalid option");
                    break;
            }
            nameSong.setText("");
            durationSong.setText("");
            nameArtist.setText("");
            counter++;
            numberOfSongs.setText(Integer.toString(counter));
        }
    }//GEN-LAST:event_addSongActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        String search = JOptionPane.showInputDialog(this, "Enter the name of the song");
        objectList.SearchSong(search);

    }//GEN-LAST:event_searchActionPerformed

    private void deleteSongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteSongActionPerformed
        String search = JOptionPane.showInputDialog(this, "Enter the name of the song");
        boolean con = objectList.DeleteSong(search);
        if (con) {
            counter--;
        }
        numberOfSongs.setText(counter + "");
    }//GEN-LAST:event_deleteSongActionPerformed

    private void seeListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seeListActionPerformed
        int opt = Integer.parseInt(JOptionPane.showInputDialog("1.Consult forward\n 2.Consult backward"));
        switch (opt) {
            case 1:
                objectList.PrintFirstToLast();
                break;
            case 2:
                objectList.PrintLastToFirst();
                break;
            default:
                JOptionPane.showMessageDialog(null, "invalid option");
                break;
        }
    }//GEN-LAST:event_seeListActionPerformed

    private void modifySongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifySongActionPerformed
        if (nameSong.getText().isEmpty() && durationSong.getText().isEmpty() && nameArtist.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter the required data");
        } else if (nameSong.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "enter the name of the song");
        } else if (durationSong.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "enter the length of the song");
        } else if (nameArtist.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "enter the name of the song artist");
        } else {
            String search = JOptionPane.showInputDialog(this, "enter the name of the song");
            objectList.ModifySong(nameSong.getText(), durationSong.getText(), nameArtist.getText(), search);
            nameSong.setText("");
            durationSong.setText("");
            nameArtist.setText("");
        }
    }//GEN-LAST:event_modifySongActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuPlayer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuPlayer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuPlayer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuPlayer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuPlayer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addSong;
    private javax.swing.JButton deleteSong;
    private javax.swing.JLabel durationOfTheSong;
    private javax.swing.JTextField durationSong;
    private javax.swing.JButton modifySong;
    private javax.swing.JTextField nameArtist;
    private javax.swing.JLabel nameOfArtist;
    private javax.swing.JLabel nameOfSong;
    private javax.swing.JTextField nameSong;
    private javax.swing.JLabel numberOfSongs;
    private javax.swing.JLabel numberOfSongsText;
    private javax.swing.JLabel options;
    private javax.swing.JButton search;
    private javax.swing.JButton seeList;
    private javax.swing.JLabel titleApp;
    // End of variables declaration//GEN-END:variables
}
